buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		jcenter()
//		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'gmr'
	version = '0.0.1-SNAPSHOT'
}
version = jar.version

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
    maven { url "https://repository-pronghorn.forge.cloudbees.com/release" }
//	mavenCentral()
//	maven { url "https://repo.spring.io/snapshot" }
//	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile files('libs/pi4j-core-0.0.5.jar')
    compile ('org.springframework.boot:spring-boot-starter') {
        exclude module : 'spring-boot-starter-logging'
    }
	compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module : 'spring-boot-starter-logging'
    }
    compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('commons-codec:commons-codec:1.10')
	compile('com.ociweb:PronghornIoT:0.0.9')
//    compile('org.slf4j:slf4j-api:1.7.12')
//    compile('org.slf4j:slf4j-simple:1.7.12')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

ext {
	commit = 'git rev-parse --short HEAD'.execute().text.trim()
	branch = 'git rev-parse --abbrev-ref --symbolic HEAD'.execute().text.trim()
}

processResources {
	expand(
			timestamp: new Date(),
			commit: commit,
			branch: branch,
			version: project.version
	)
}

springBoot {
    mainClass = "com.gyurigrell.gmr.GmrApplication"
}
