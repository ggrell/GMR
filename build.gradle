buildscript {
	ext {
		springBootVersion = '1.4.0.RC1'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'gmr'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('commons-codec:commons-codec:1.10')
//	compile('org.springframework.boot:spring-boot-starter-jersey')
//	compile('org.springframework.boot:spring-boot-starter-security')
//	compile('org.springframework.boot:spring-boot-starter-web-services')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

ext {
	commit = 'git rev-parse --short HEAD'.execute().text.trim()
	branch = 'git rev-parse --abbrev-ref --symbolic HEAD'.execute().text.trim()
}

processResources {
	expand(
			timestamp: new Date(),
			commit: commit,
			branch: branch,
			version: project.version
	)
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
